name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
        
      - name: Build WASM module
        run: |
          cd parser-wasm
          wasm-pack build --target web --release
          
      - name: Test WASM module
        run: |
          cd parser-wasm
          cargo test
          
      - name: Run tests
        run: npm test
        
      - name: Run tests with coverage
        run: npm run test:coverage

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
        
      - name: Build WASM module
        run: |
          cd parser-wasm
          wasm-pack build --target web --release
          
      - name: Build optimized production version
        run: npm run build:prod
        
      - name: List built files
        run: |
          echo "Production build completed with optimization"
          echo "Contents of build directory:"
          ls -la build/ || echo "No build directory found"
          echo "Optimized file sizes:"
          find build/ -name "*.js" -exec ls -lh {} \; | head -5
          echo "Compressed files:"
          find build/ -name "*.gz" | wc -l | sed 's/^/Gzip files: /'
          find build/ -name "*.br" | wc -l | sed 's/^/Brotli files: /'
          echo "Total build size:"
          du -sh build/ || echo "Cannot calculate build size"
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build/
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
