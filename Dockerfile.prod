# Production Dockerfile for Konficurator
# This creates an optimized production build served by nginx

# Build stage
FROM node:20-alpine AS build

# Install Rust and required tools
RUN apk add --no-cache curl build-base
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
RUN rustup target add wasm32-unknown-unknown

# Install wasm-pack and wasm-bindgen CLI
RUN curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
RUN cargo install wasm-bindgen-cli

WORKDIR /app

# Copy package files and install all dependencies (including devDependencies for build)
COPY package*.json ./
RUN npm ci

# Copy source code and build tools
COPY . .

# Build WASM module first
RUN cd parser-wasm && wasm-pack build --target web --release

# Build optimized production bundle
RUN npm run build:prod

# Production stage
FROM nginx:alpine AS production

# Copy optimized build to nginx
COPY --from=build /app/build /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose production port
EXPOSE 8080

# Health check using curl which is available in nginx:alpine
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
	CMD curl -f http://localhost:8080/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
